// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoodFlix;

#nullable disable

namespace MoodFlix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241202154316_FixedCountryNameSpaces")]
    partial class FixedCountryNameSpaces
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoodFlix.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 0,
                            CountryCode = "AF",
                            CountryName = "Afghanistan"
                        },
                        new
                        {
                            CountryId = 1,
                            CountryCode = "AL",
                            CountryName = "Albania"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryCode = "DZ",
                            CountryName = "Algeria"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryCode = "AD",
                            CountryName = "Andorra"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryCode = "AO",
                            CountryName = "Angola"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryCode = "AG",
                            CountryName = "Antigua_And_Barbuda"
                        },
                        new
                        {
                            CountryId = 6,
                            CountryCode = "AR",
                            CountryName = "Argentina"
                        },
                        new
                        {
                            CountryId = 7,
                            CountryCode = "AM",
                            CountryName = "Armenia"
                        },
                        new
                        {
                            CountryId = 8,
                            CountryCode = "AU",
                            CountryName = "Australia"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryCode = "AT",
                            CountryName = "Austria"
                        },
                        new
                        {
                            CountryId = 10,
                            CountryCode = "AZ",
                            CountryName = "Azerbaijan"
                        },
                        new
                        {
                            CountryId = 11,
                            CountryCode = "BS",
                            CountryName = "Bahamas"
                        },
                        new
                        {
                            CountryId = 12,
                            CountryCode = "BH",
                            CountryName = "Bahrain"
                        },
                        new
                        {
                            CountryId = 13,
                            CountryCode = "BD",
                            CountryName = "Bangladesh"
                        },
                        new
                        {
                            CountryId = 14,
                            CountryCode = "BB",
                            CountryName = "Barbados"
                        },
                        new
                        {
                            CountryId = 15,
                            CountryCode = "BY",
                            CountryName = "Belarus"
                        },
                        new
                        {
                            CountryId = 16,
                            CountryCode = "BE",
                            CountryName = "Belgium"
                        },
                        new
                        {
                            CountryId = 17,
                            CountryCode = "BZ",
                            CountryName = "Belize"
                        },
                        new
                        {
                            CountryId = 18,
                            CountryCode = "BJ",
                            CountryName = "Benin"
                        },
                        new
                        {
                            CountryId = 19,
                            CountryCode = "BT",
                            CountryName = "Bhutan"
                        },
                        new
                        {
                            CountryId = 20,
                            CountryCode = "BO",
                            CountryName = "Bolivia"
                        },
                        new
                        {
                            CountryId = 21,
                            CountryCode = "BA",
                            CountryName = "Bosnia_And_Herzegovina"
                        },
                        new
                        {
                            CountryId = 22,
                            CountryCode = "BW",
                            CountryName = "Botswana"
                        },
                        new
                        {
                            CountryId = 23,
                            CountryCode = "BR",
                            CountryName = "Brazil"
                        },
                        new
                        {
                            CountryId = 24,
                            CountryCode = "BN",
                            CountryName = "Brunei"
                        },
                        new
                        {
                            CountryId = 25,
                            CountryCode = "BG",
                            CountryName = "Bulgaria"
                        },
                        new
                        {
                            CountryId = 26,
                            CountryCode = "BF",
                            CountryName = "BurkinaFaso"
                        },
                        new
                        {
                            CountryId = 27,
                            CountryCode = "BI",
                            CountryName = "Burundi"
                        },
                        new
                        {
                            CountryId = 28,
                            CountryCode = "KH",
                            CountryName = "Cambodia"
                        },
                        new
                        {
                            CountryId = 29,
                            CountryCode = "CM",
                            CountryName = "Cameroon"
                        },
                        new
                        {
                            CountryId = 30,
                            CountryCode = "CA",
                            CountryName = "Canada"
                        },
                        new
                        {
                            CountryId = 31,
                            CountryCode = "CV",
                            CountryName = "CapeVerde"
                        },
                        new
                        {
                            CountryId = 32,
                            CountryCode = "CF",
                            CountryName = "Central_African_Republic"
                        },
                        new
                        {
                            CountryId = 33,
                            CountryCode = "TD",
                            CountryName = "Chad"
                        },
                        new
                        {
                            CountryId = 34,
                            CountryCode = "CL",
                            CountryName = "Chile"
                        },
                        new
                        {
                            CountryId = 35,
                            CountryCode = "CN",
                            CountryName = "China"
                        },
                        new
                        {
                            CountryId = 36,
                            CountryCode = "CO",
                            CountryName = "Colombia"
                        },
                        new
                        {
                            CountryId = 37,
                            CountryCode = "KM",
                            CountryName = "Comoros"
                        },
                        new
                        {
                            CountryId = 38,
                            CountryCode = "CD",
                            CountryName = "Congo_Democratic_Republic"
                        },
                        new
                        {
                            CountryId = 39,
                            CountryCode = "CG",
                            CountryName = "Congo_Republic"
                        },
                        new
                        {
                            CountryId = 40,
                            CountryCode = "CR",
                            CountryName = "CostaRica"
                        },
                        new
                        {
                            CountryId = 41,
                            CountryCode = "HR",
                            CountryName = "Croatia"
                        },
                        new
                        {
                            CountryId = 42,
                            CountryCode = "CU",
                            CountryName = "Cuba"
                        },
                        new
                        {
                            CountryId = 43,
                            CountryCode = "CY",
                            CountryName = "Cyprus"
                        },
                        new
                        {
                            CountryId = 44,
                            CountryCode = "CZ",
                            CountryName = "Czech_Republic"
                        },
                        new
                        {
                            CountryId = 45,
                            CountryCode = "DK",
                            CountryName = "Denmark"
                        },
                        new
                        {
                            CountryId = 46,
                            CountryCode = "DJ",
                            CountryName = "Djibouti"
                        },
                        new
                        {
                            CountryId = 47,
                            CountryCode = "DM",
                            CountryName = "Dominica"
                        },
                        new
                        {
                            CountryId = 48,
                            CountryCode = "DO",
                            CountryName = "Dominican_Republic"
                        },
                        new
                        {
                            CountryId = 49,
                            CountryCode = "EC",
                            CountryName = "Ecuador"
                        },
                        new
                        {
                            CountryId = 50,
                            CountryCode = "EG",
                            CountryName = "Egypt"
                        },
                        new
                        {
                            CountryId = 51,
                            CountryCode = "SV",
                            CountryName = "El_Salvador"
                        },
                        new
                        {
                            CountryId = 52,
                            CountryCode = "GQ",
                            CountryName = "Equatorial_Guinea"
                        },
                        new
                        {
                            CountryId = 53,
                            CountryCode = "ER",
                            CountryName = "Eritrea"
                        },
                        new
                        {
                            CountryId = 54,
                            CountryCode = "EE",
                            CountryName = "Estonia"
                        },
                        new
                        {
                            CountryId = 55,
                            CountryCode = "SZ",
                            CountryName = "Eswatini"
                        },
                        new
                        {
                            CountryId = 56,
                            CountryCode = "ET",
                            CountryName = "Ethiopia"
                        },
                        new
                        {
                            CountryId = 57,
                            CountryCode = "FJ",
                            CountryName = "Fiji"
                        },
                        new
                        {
                            CountryId = 58,
                            CountryCode = "FI",
                            CountryName = "Finland"
                        },
                        new
                        {
                            CountryId = 59,
                            CountryCode = "FR",
                            CountryName = "France"
                        },
                        new
                        {
                            CountryId = 60,
                            CountryCode = "GA",
                            CountryName = "Gabon"
                        },
                        new
                        {
                            CountryId = 61,
                            CountryCode = "GM",
                            CountryName = "Gambia"
                        },
                        new
                        {
                            CountryId = 62,
                            CountryCode = "GE",
                            CountryName = "Georgia"
                        },
                        new
                        {
                            CountryId = 63,
                            CountryCode = "DE",
                            CountryName = "Germany"
                        },
                        new
                        {
                            CountryId = 64,
                            CountryCode = "GH",
                            CountryName = "Ghana"
                        },
                        new
                        {
                            CountryId = 65,
                            CountryCode = "GR",
                            CountryName = "Greece"
                        },
                        new
                        {
                            CountryId = 66,
                            CountryCode = "GD",
                            CountryName = "Grenada"
                        },
                        new
                        {
                            CountryId = 67,
                            CountryCode = "GT",
                            CountryName = "Guatemala"
                        },
                        new
                        {
                            CountryId = 68,
                            CountryCode = "GN",
                            CountryName = "Guinea"
                        },
                        new
                        {
                            CountryId = 69,
                            CountryCode = "GW",
                            CountryName = "Guinea_Bissau"
                        },
                        new
                        {
                            CountryId = 70,
                            CountryCode = "GY",
                            CountryName = "Guyana"
                        },
                        new
                        {
                            CountryId = 71,
                            CountryCode = "HT",
                            CountryName = "Haiti"
                        },
                        new
                        {
                            CountryId = 72,
                            CountryCode = "HN",
                            CountryName = "Honduras"
                        },
                        new
                        {
                            CountryId = 73,
                            CountryCode = "HU",
                            CountryName = "Hungary"
                        },
                        new
                        {
                            CountryId = 74,
                            CountryCode = "IS",
                            CountryName = "Iceland"
                        },
                        new
                        {
                            CountryId = 75,
                            CountryCode = "IN",
                            CountryName = "India"
                        },
                        new
                        {
                            CountryId = 76,
                            CountryCode = "ID",
                            CountryName = "Indonesia"
                        },
                        new
                        {
                            CountryId = 77,
                            CountryCode = "IR",
                            CountryName = "Iran"
                        },
                        new
                        {
                            CountryId = 78,
                            CountryCode = "IQ",
                            CountryName = "Iraq"
                        },
                        new
                        {
                            CountryId = 79,
                            CountryCode = "IE",
                            CountryName = "Ireland"
                        },
                        new
                        {
                            CountryId = 80,
                            CountryCode = "IL",
                            CountryName = "Israel"
                        },
                        new
                        {
                            CountryId = 81,
                            CountryCode = "IT",
                            CountryName = "Italy"
                        },
                        new
                        {
                            CountryId = 82,
                            CountryCode = "JM",
                            CountryName = "Jamaica"
                        },
                        new
                        {
                            CountryId = 83,
                            CountryCode = "JP",
                            CountryName = "Japan"
                        },
                        new
                        {
                            CountryId = 84,
                            CountryCode = "JO",
                            CountryName = "Jordan"
                        },
                        new
                        {
                            CountryId = 85,
                            CountryCode = "KZ",
                            CountryName = "Kazakhstan"
                        },
                        new
                        {
                            CountryId = 86,
                            CountryCode = "KE",
                            CountryName = "Kenya"
                        },
                        new
                        {
                            CountryId = 87,
                            CountryCode = "KI",
                            CountryName = "Kiribati"
                        },
                        new
                        {
                            CountryId = 88,
                            CountryCode = "KP",
                            CountryName = "Korea_North"
                        },
                        new
                        {
                            CountryId = 89,
                            CountryCode = "KR",
                            CountryName = "Korea_South"
                        },
                        new
                        {
                            CountryId = 90,
                            CountryCode = "KW",
                            CountryName = "Kuwait"
                        },
                        new
                        {
                            CountryId = 91,
                            CountryCode = "KG",
                            CountryName = "Kyrgyzstan"
                        },
                        new
                        {
                            CountryId = 92,
                            CountryCode = "LA",
                            CountryName = "Laos"
                        },
                        new
                        {
                            CountryId = 93,
                            CountryCode = "LV",
                            CountryName = "Latvia"
                        },
                        new
                        {
                            CountryId = 94,
                            CountryCode = "LB",
                            CountryName = "Lebanon"
                        },
                        new
                        {
                            CountryId = 95,
                            CountryCode = "LS",
                            CountryName = "Lesotho"
                        },
                        new
                        {
                            CountryId = 96,
                            CountryCode = "LR",
                            CountryName = "Liberia"
                        },
                        new
                        {
                            CountryId = 97,
                            CountryCode = "LY",
                            CountryName = "Libya"
                        },
                        new
                        {
                            CountryId = 98,
                            CountryCode = "LI",
                            CountryName = "Liechtenstein"
                        },
                        new
                        {
                            CountryId = 99,
                            CountryCode = "LT",
                            CountryName = "Lithuania"
                        },
                        new
                        {
                            CountryId = 100,
                            CountryCode = "LU",
                            CountryName = "Luxembourg"
                        },
                        new
                        {
                            CountryId = 101,
                            CountryCode = "MG",
                            CountryName = "Madagascar"
                        },
                        new
                        {
                            CountryId = 102,
                            CountryCode = "MW",
                            CountryName = "Malawi"
                        },
                        new
                        {
                            CountryId = 103,
                            CountryCode = "MY",
                            CountryName = "Malaysia"
                        },
                        new
                        {
                            CountryId = 104,
                            CountryCode = "MV",
                            CountryName = "Maldives"
                        },
                        new
                        {
                            CountryId = 105,
                            CountryCode = "ML",
                            CountryName = "Mali"
                        },
                        new
                        {
                            CountryId = 106,
                            CountryCode = "MT",
                            CountryName = "Malta"
                        },
                        new
                        {
                            CountryId = 107,
                            CountryCode = "MH",
                            CountryName = "Marshall_Islands"
                        },
                        new
                        {
                            CountryId = 108,
                            CountryCode = "MR",
                            CountryName = "Mauritania"
                        },
                        new
                        {
                            CountryId = 109,
                            CountryCode = "MU",
                            CountryName = "Mauritius"
                        },
                        new
                        {
                            CountryId = 110,
                            CountryCode = "MX",
                            CountryName = "Mexico"
                        },
                        new
                        {
                            CountryId = 111,
                            CountryCode = "FM",
                            CountryName = "Micronesia"
                        },
                        new
                        {
                            CountryId = 112,
                            CountryCode = "MD",
                            CountryName = "Moldova"
                        },
                        new
                        {
                            CountryId = 113,
                            CountryCode = "MC",
                            CountryName = "Monaco"
                        },
                        new
                        {
                            CountryId = 114,
                            CountryCode = "MN",
                            CountryName = "Mongolia"
                        },
                        new
                        {
                            CountryId = 115,
                            CountryCode = "ME",
                            CountryName = "Montenegro"
                        },
                        new
                        {
                            CountryId = 116,
                            CountryCode = "MA",
                            CountryName = "Morocco"
                        },
                        new
                        {
                            CountryId = 117,
                            CountryCode = "MZ",
                            CountryName = "Mozambique"
                        },
                        new
                        {
                            CountryId = 118,
                            CountryCode = "MM",
                            CountryName = "Myanmar"
                        },
                        new
                        {
                            CountryId = 119,
                            CountryCode = "NA",
                            CountryName = "Namibia"
                        },
                        new
                        {
                            CountryId = 120,
                            CountryCode = "NR",
                            CountryName = "Nauru"
                        },
                        new
                        {
                            CountryId = 121,
                            CountryCode = "NP",
                            CountryName = "Nepal"
                        },
                        new
                        {
                            CountryId = 122,
                            CountryCode = "NL",
                            CountryName = "Netherlands"
                        },
                        new
                        {
                            CountryId = 123,
                            CountryCode = "NZ",
                            CountryName = "New_Zealand"
                        },
                        new
                        {
                            CountryId = 124,
                            CountryCode = "NI",
                            CountryName = "Nicaragua"
                        },
                        new
                        {
                            CountryId = 125,
                            CountryCode = "NE",
                            CountryName = "Niger"
                        },
                        new
                        {
                            CountryId = 126,
                            CountryCode = "NG",
                            CountryName = "Nigeria"
                        },
                        new
                        {
                            CountryId = 127,
                            CountryCode = "MK",
                            CountryName = "North_Macedonia"
                        },
                        new
                        {
                            CountryId = 128,
                            CountryCode = "NO",
                            CountryName = "Norway"
                        },
                        new
                        {
                            CountryId = 129,
                            CountryCode = "OM",
                            CountryName = "Oman"
                        },
                        new
                        {
                            CountryId = 130,
                            CountryCode = "PK",
                            CountryName = "Pakistan"
                        },
                        new
                        {
                            CountryId = 131,
                            CountryCode = "PW",
                            CountryName = "Palau"
                        },
                        new
                        {
                            CountryId = 132,
                            CountryCode = "PS",
                            CountryName = "Palestine"
                        },
                        new
                        {
                            CountryId = 133,
                            CountryCode = "PA",
                            CountryName = "Panama"
                        },
                        new
                        {
                            CountryId = 134,
                            CountryCode = "PG",
                            CountryName = "Papua_New_Guinea"
                        },
                        new
                        {
                            CountryId = 135,
                            CountryCode = "PY",
                            CountryName = "Paraguay"
                        },
                        new
                        {
                            CountryId = 136,
                            CountryCode = "PE",
                            CountryName = "Peru"
                        },
                        new
                        {
                            CountryId = 137,
                            CountryCode = "PH",
                            CountryName = "Philippines"
                        },
                        new
                        {
                            CountryId = 138,
                            CountryCode = "PL",
                            CountryName = "Poland"
                        },
                        new
                        {
                            CountryId = 139,
                            CountryCode = "PT",
                            CountryName = "Portugal"
                        },
                        new
                        {
                            CountryId = 140,
                            CountryCode = "QA",
                            CountryName = "Qatar"
                        },
                        new
                        {
                            CountryId = 141,
                            CountryCode = "RO",
                            CountryName = "Romania"
                        },
                        new
                        {
                            CountryId = 142,
                            CountryCode = "RU",
                            CountryName = "Russia"
                        },
                        new
                        {
                            CountryId = 143,
                            CountryCode = "RW",
                            CountryName = "Rwanda"
                        },
                        new
                        {
                            CountryId = 144,
                            CountryCode = "KN",
                            CountryName = "SaintKitts_And_Nevis"
                        },
                        new
                        {
                            CountryId = 145,
                            CountryCode = "LC",
                            CountryName = "Saint_Lucia"
                        },
                        new
                        {
                            CountryId = 146,
                            CountryCode = "VC",
                            CountryName = "Saint_Vincent_And_The_Grenadines"
                        },
                        new
                        {
                            CountryId = 147,
                            CountryCode = "WS",
                            CountryName = "Samoa"
                        },
                        new
                        {
                            CountryId = 148,
                            CountryCode = "SM",
                            CountryName = "San_Marino"
                        },
                        new
                        {
                            CountryId = 149,
                            CountryCode = "ST",
                            CountryName = "Sao_Tome_And_Principe"
                        },
                        new
                        {
                            CountryId = 150,
                            CountryCode = "SA",
                            CountryName = "Saudi_Arabia"
                        },
                        new
                        {
                            CountryId = 151,
                            CountryCode = "SN",
                            CountryName = "Senegal"
                        },
                        new
                        {
                            CountryId = 152,
                            CountryCode = "RS",
                            CountryName = "Serbia"
                        },
                        new
                        {
                            CountryId = 153,
                            CountryCode = "SC",
                            CountryName = "Seychelles"
                        },
                        new
                        {
                            CountryId = 154,
                            CountryCode = "SL",
                            CountryName = "Sierra_Leone"
                        },
                        new
                        {
                            CountryId = 155,
                            CountryCode = "SG",
                            CountryName = "Singapore"
                        },
                        new
                        {
                            CountryId = 156,
                            CountryCode = "SK",
                            CountryName = "Slovakia"
                        },
                        new
                        {
                            CountryId = 157,
                            CountryCode = "SI",
                            CountryName = "Slovenia"
                        },
                        new
                        {
                            CountryId = 158,
                            CountryCode = "SB",
                            CountryName = "Solomon_Is_lands"
                        },
                        new
                        {
                            CountryId = 159,
                            CountryCode = "SO",
                            CountryName = "Somalia"
                        },
                        new
                        {
                            CountryId = 160,
                            CountryCode = "ZA",
                            CountryName = "South_Africa"
                        },
                        new
                        {
                            CountryId = 161,
                            CountryCode = "SS",
                            CountryName = "South_Sudan"
                        },
                        new
                        {
                            CountryId = 162,
                            CountryCode = "ES",
                            CountryName = "Spain"
                        },
                        new
                        {
                            CountryId = 163,
                            CountryCode = "LK",
                            CountryName = "SriLanka"
                        },
                        new
                        {
                            CountryId = 164,
                            CountryCode = "SD",
                            CountryName = "Sudan"
                        },
                        new
                        {
                            CountryId = 165,
                            CountryCode = "SR",
                            CountryName = "Suriname"
                        },
                        new
                        {
                            CountryId = 166,
                            CountryCode = "SE",
                            CountryName = "Sweden"
                        },
                        new
                        {
                            CountryId = 167,
                            CountryCode = "CH",
                            CountryName = "Switzerland"
                        },
                        new
                        {
                            CountryId = 168,
                            CountryCode = "SY",
                            CountryName = "Syria"
                        },
                        new
                        {
                            CountryId = 169,
                            CountryCode = "TW",
                            CountryName = "Taiwan"
                        },
                        new
                        {
                            CountryId = 170,
                            CountryCode = "TJ",
                            CountryName = "Tajikistan"
                        },
                        new
                        {
                            CountryId = 171,
                            CountryCode = "TZ",
                            CountryName = "Tanzania"
                        },
                        new
                        {
                            CountryId = 172,
                            CountryCode = "TH",
                            CountryName = "Thailand"
                        },
                        new
                        {
                            CountryId = 173,
                            CountryCode = "TL",
                            CountryName = "Timor_Leste"
                        },
                        new
                        {
                            CountryId = 174,
                            CountryCode = "TG",
                            CountryName = "Togo"
                        },
                        new
                        {
                            CountryId = 175,
                            CountryCode = "TO",
                            CountryName = "Tonga"
                        },
                        new
                        {
                            CountryId = 176,
                            CountryCode = "TT",
                            CountryName = "Trinidad_And_Tobago"
                        },
                        new
                        {
                            CountryId = 177,
                            CountryCode = "TN",
                            CountryName = "Tunisia"
                        },
                        new
                        {
                            CountryId = 178,
                            CountryCode = "TR",
                            CountryName = "Turkey"
                        },
                        new
                        {
                            CountryId = 179,
                            CountryCode = "TM",
                            CountryName = "Turkmenistan"
                        },
                        new
                        {
                            CountryId = 180,
                            CountryCode = "TV",
                            CountryName = "Tuvalu"
                        },
                        new
                        {
                            CountryId = 181,
                            CountryCode = "UG",
                            CountryName = "Uganda"
                        },
                        new
                        {
                            CountryId = 182,
                            CountryCode = "UA",
                            CountryName = "Ukraine"
                        },
                        new
                        {
                            CountryId = 183,
                            CountryCode = "AE",
                            CountryName = "United_Arab_Emirates"
                        },
                        new
                        {
                            CountryId = 184,
                            CountryCode = "GB",
                            CountryName = "United_Kingdom"
                        },
                        new
                        {
                            CountryId = 185,
                            CountryCode = "US",
                            CountryName = "United_States"
                        },
                        new
                        {
                            CountryId = 186,
                            CountryCode = "UY",
                            CountryName = "Uruguay"
                        },
                        new
                        {
                            CountryId = 187,
                            CountryCode = "UZ",
                            CountryName = "Uzbekistan"
                        },
                        new
                        {
                            CountryId = 188,
                            CountryCode = "VU",
                            CountryName = "Vanuatu"
                        },
                        new
                        {
                            CountryId = 189,
                            CountryCode = "VA",
                            CountryName = "Vatican_City"
                        },
                        new
                        {
                            CountryId = 190,
                            CountryCode = "VE",
                            CountryName = "Venezuela"
                        },
                        new
                        {
                            CountryId = 191,
                            CountryCode = "VN",
                            CountryName = "Vietnam"
                        },
                        new
                        {
                            CountryId = 192,
                            CountryCode = "YE",
                            CountryName = "Yemen"
                        },
                        new
                        {
                            CountryId = 193,
                            CountryCode = "ZM",
                            CountryName = "Zambia"
                        },
                        new
                        {
                            CountryId = 194,
                            CountryCode = "ZW",
                            CountryName = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("MoodFlix.Model.CountryPlatform", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("CountryPlatform");
                });

            modelBuilder.Entity("MoodFlix.Model.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"));

                    b.Property<string>("DirectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorId");

                    b.ToTable("Director");
                });

            modelBuilder.Entity("MoodFlix.Model.DirectorMovie", b =>
                {
                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("DirectorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("DirectorMovie");
                });

            modelBuilder.Entity("MoodFlix.Model.Emotion", b =>
                {
                    b.Property<int>("EmotionId")
                        .HasColumnType("int");

                    b.Property<string>("EmotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmotionId");

                    b.ToTable("Emotion");

                    b.HasData(
                        new
                        {
                            EmotionId = 0,
                            EmotionName = "Boredom"
                        },
                        new
                        {
                            EmotionId = 1,
                            EmotionName = "Admiration"
                        },
                        new
                        {
                            EmotionId = 2,
                            EmotionName = "Adoration"
                        },
                        new
                        {
                            EmotionId = 3,
                            EmotionName = "Joy"
                        },
                        new
                        {
                            EmotionId = 4,
                            EmotionName = "Love"
                        },
                        new
                        {
                            EmotionId = 5,
                            EmotionName = "Craving"
                        },
                        new
                        {
                            EmotionId = 6,
                            EmotionName = "Anxiety"
                        },
                        new
                        {
                            EmotionId = 7,
                            EmotionName = "AestheticAppreciation"
                        },
                        new
                        {
                            EmotionId = 8,
                            EmotionName = "Amazement"
                        },
                        new
                        {
                            EmotionId = 9,
                            EmotionName = "Calmness"
                        },
                        new
                        {
                            EmotionId = 10,
                            EmotionName = "Confusion"
                        },
                        new
                        {
                            EmotionId = 11,
                            EmotionName = "Lust"
                        },
                        new
                        {
                            EmotionId = 12,
                            EmotionName = "Disgust"
                        },
                        new
                        {
                            EmotionId = 13,
                            EmotionName = "Fun"
                        },
                        new
                        {
                            EmotionId = 14,
                            EmotionName = "EmpathicPain"
                        },
                        new
                        {
                            EmotionId = 15,
                            EmotionName = "Anger"
                        },
                        new
                        {
                            EmotionId = 16,
                            EmotionName = "Envy"
                        },
                        new
                        {
                            EmotionId = 17,
                            EmotionName = "Ecstasy"
                        },
                        new
                        {
                            EmotionId = 18,
                            EmotionName = "Horror"
                        },
                        new
                        {
                            EmotionId = 19,
                            EmotionName = "Interest"
                        },
                        new
                        {
                            EmotionId = 20,
                            EmotionName = "Fear"
                        },
                        new
                        {
                            EmotionId = 21,
                            EmotionName = "Nostalgia"
                        },
                        new
                        {
                            EmotionId = 22,
                            EmotionName = "Satisfaction"
                        },
                        new
                        {
                            EmotionId = 23,
                            EmotionName = "Sympathy"
                        },
                        new
                        {
                            EmotionId = 24,
                            EmotionName = "Sadness"
                        },
                        new
                        {
                            EmotionId = 25,
                            EmotionName = "Triumph"
                        },
                        new
                        {
                            EmotionId = 26,
                            EmotionName = "Shame"
                        });
                });

            modelBuilder.Entity("MoodFlix.Model.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = 0,
                            GenreName = "Action"
                        },
                        new
                        {
                            GenreId = 1,
                            GenreName = "Adventure"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Animation"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Comedy"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Crime"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Documentary"
                        },
                        new
                        {
                            GenreId = 6,
                            GenreName = "Drama"
                        },
                        new
                        {
                            GenreId = 7,
                            GenreName = "Family"
                        },
                        new
                        {
                            GenreId = 8,
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            GenreId = 9,
                            GenreName = "History"
                        },
                        new
                        {
                            GenreId = 10,
                            GenreName = "Horror"
                        },
                        new
                        {
                            GenreId = 11,
                            GenreName = "Music"
                        },
                        new
                        {
                            GenreId = 12,
                            GenreName = "Mystery"
                        },
                        new
                        {
                            GenreId = 13,
                            GenreName = "News"
                        },
                        new
                        {
                            GenreId = 14,
                            GenreName = "Reality"
                        },
                        new
                        {
                            GenreId = 15,
                            GenreName = "Romance"
                        },
                        new
                        {
                            GenreId = 16,
                            GenreName = "ScienceFiction"
                        },
                        new
                        {
                            GenreId = 17,
                            GenreName = "TalkShow"
                        },
                        new
                        {
                            GenreId = 18,
                            GenreName = "Thriller"
                        },
                        new
                        {
                            GenreId = 19,
                            GenreName = "War"
                        },
                        new
                        {
                            GenreId = 20,
                            GenreName = "Western"
                        });
                });

            modelBuilder.Entity("MoodFlix.Model.GenreMovie", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("GenreMovie");
                });

            modelBuilder.Entity("MoodFlix.Model.HistoryEmotion", b =>
                {
                    b.Property<int>("HistoryEmotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryEmotionId"));

                    b.Property<int>("EmotionId")
                        .HasColumnType("int");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.HasKey("HistoryEmotionId");

                    b.HasIndex("EmotionId");

                    b.HasIndex("RegisterId");

                    b.ToTable("HistoryEmotion");
                });

            modelBuilder.Entity("MoodFlix.Model.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("HorizontalPosterw360")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorizontalPosterw480")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorizontalPosterw720")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MoodFlix.Model.Platform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformId"));

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformId");

                    b.ToTable("Platform");
                });

            modelBuilder.Entity("MoodFlix.Model.Register", b =>
                {
                    b.Property<int>("RegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegisterId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegisterId");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("MoodFlix.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CountryId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MoodFlix.Model.UserGenre", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPreferred")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("UserGenre");
                });

            modelBuilder.Entity("MoodFlix.Model.UserPlatform", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("UserPlatform");
                });

            modelBuilder.Entity("MoodFlix.Model.CountryPlatform", b =>
                {
                    b.HasOne("MoodFlix.Model.Country", "Country")
                        .WithMany("CountryPlatforms")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Platform", "Platform")
                        .WithMany("CountryPlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("MoodFlix.Model.DirectorMovie", b =>
                {
                    b.HasOne("MoodFlix.Model.Director", "Director")
                        .WithMany("DirectorMovies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Movie", "Movie")
                        .WithMany("DirectorMovie")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoodFlix.Model.GenreMovie", b =>
                {
                    b.HasOne("MoodFlix.Model.Genre", "Genre")
                        .WithMany("GenreMovies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Movie", "Movie")
                        .WithMany("GenreMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoodFlix.Model.HistoryEmotion", b =>
                {
                    b.HasOne("MoodFlix.Model.Emotion", "Emotion")
                        .WithMany("HistoryEmotions")
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Register", "Register")
                        .WithMany("HistoryEmotions")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emotion");

                    b.Navigation("Register");
                });

            modelBuilder.Entity("MoodFlix.Model.Register", b =>
                {
                    b.HasOne("MoodFlix.Model.Movie", "Movie")
                        .WithMany("Registers")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.User", "User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodFlix.Model.User", b =>
                {
                    b.HasOne("MoodFlix.Model.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MoodFlix.Model.UserGenre", b =>
                {
                    b.HasOne("MoodFlix.Model.Genre", "Genre")
                        .WithMany("UserGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.User", "User")
                        .WithMany("UserGenres")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodFlix.Model.UserPlatform", b =>
                {
                    b.HasOne("MoodFlix.Model.Platform", "Platform")
                        .WithMany("UserPlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.User", "User")
                        .WithMany("UserPlatforms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodFlix.Model.Country", b =>
                {
                    b.Navigation("CountryPlatforms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MoodFlix.Model.Director", b =>
                {
                    b.Navigation("DirectorMovies");
                });

            modelBuilder.Entity("MoodFlix.Model.Emotion", b =>
                {
                    b.Navigation("HistoryEmotions");
                });

            modelBuilder.Entity("MoodFlix.Model.Genre", b =>
                {
                    b.Navigation("GenreMovies");

                    b.Navigation("UserGenres");
                });

            modelBuilder.Entity("MoodFlix.Model.Movie", b =>
                {
                    b.Navigation("DirectorMovie");

                    b.Navigation("GenreMovies");

                    b.Navigation("Registers");
                });

            modelBuilder.Entity("MoodFlix.Model.Platform", b =>
                {
                    b.Navigation("CountryPlatforms");

                    b.Navigation("UserPlatforms");
                });

            modelBuilder.Entity("MoodFlix.Model.Register", b =>
                {
                    b.Navigation("HistoryEmotions");
                });

            modelBuilder.Entity("MoodFlix.Model.User", b =>
                {
                    b.Navigation("History");

                    b.Navigation("UserGenres");

                    b.Navigation("UserPlatforms");
                });
#pragma warning restore 612, 618
        }
    }
}
