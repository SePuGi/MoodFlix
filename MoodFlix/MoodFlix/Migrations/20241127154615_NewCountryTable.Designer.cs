// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoodFlix;

#nullable disable

namespace MoodFlix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241127154615_NewCountryTable")]
    partial class NewCountryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoodFlix.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 0,
                            CountryName = "AF"
                        },
                        new
                        {
                            CountryId = 1,
                            CountryName = "AL"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "DZ"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "AD"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "AO"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryName = "AG"
                        },
                        new
                        {
                            CountryId = 6,
                            CountryName = "AR"
                        },
                        new
                        {
                            CountryId = 7,
                            CountryName = "AM"
                        },
                        new
                        {
                            CountryId = 8,
                            CountryName = "AU"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryName = "AT"
                        },
                        new
                        {
                            CountryId = 10,
                            CountryName = "AZ"
                        },
                        new
                        {
                            CountryId = 11,
                            CountryName = "BS"
                        },
                        new
                        {
                            CountryId = 12,
                            CountryName = "BH"
                        },
                        new
                        {
                            CountryId = 13,
                            CountryName = "BD"
                        },
                        new
                        {
                            CountryId = 14,
                            CountryName = "BB"
                        },
                        new
                        {
                            CountryId = 15,
                            CountryName = "BY"
                        },
                        new
                        {
                            CountryId = 16,
                            CountryName = "BE"
                        },
                        new
                        {
                            CountryId = 17,
                            CountryName = "BZ"
                        },
                        new
                        {
                            CountryId = 18,
                            CountryName = "BJ"
                        },
                        new
                        {
                            CountryId = 19,
                            CountryName = "BT"
                        },
                        new
                        {
                            CountryId = 20,
                            CountryName = "BO"
                        },
                        new
                        {
                            CountryId = 21,
                            CountryName = "BA"
                        },
                        new
                        {
                            CountryId = 22,
                            CountryName = "BW"
                        },
                        new
                        {
                            CountryId = 23,
                            CountryName = "BR"
                        },
                        new
                        {
                            CountryId = 24,
                            CountryName = "BN"
                        },
                        new
                        {
                            CountryId = 25,
                            CountryName = "BG"
                        },
                        new
                        {
                            CountryId = 26,
                            CountryName = "BF"
                        },
                        new
                        {
                            CountryId = 27,
                            CountryName = "BI"
                        },
                        new
                        {
                            CountryId = 28,
                            CountryName = "KH"
                        },
                        new
                        {
                            CountryId = 29,
                            CountryName = "CM"
                        },
                        new
                        {
                            CountryId = 30,
                            CountryName = "CA"
                        },
                        new
                        {
                            CountryId = 31,
                            CountryName = "CV"
                        },
                        new
                        {
                            CountryId = 32,
                            CountryName = "CF"
                        },
                        new
                        {
                            CountryId = 33,
                            CountryName = "TD"
                        },
                        new
                        {
                            CountryId = 34,
                            CountryName = "CL"
                        },
                        new
                        {
                            CountryId = 35,
                            CountryName = "CN"
                        },
                        new
                        {
                            CountryId = 36,
                            CountryName = "CO"
                        },
                        new
                        {
                            CountryId = 37,
                            CountryName = "KM"
                        },
                        new
                        {
                            CountryId = 38,
                            CountryName = "CD"
                        },
                        new
                        {
                            CountryId = 39,
                            CountryName = "CG"
                        },
                        new
                        {
                            CountryId = 40,
                            CountryName = "CR"
                        },
                        new
                        {
                            CountryId = 41,
                            CountryName = "HR"
                        },
                        new
                        {
                            CountryId = 42,
                            CountryName = "CU"
                        },
                        new
                        {
                            CountryId = 43,
                            CountryName = "CY"
                        },
                        new
                        {
                            CountryId = 44,
                            CountryName = "CZ"
                        },
                        new
                        {
                            CountryId = 45,
                            CountryName = "DK"
                        },
                        new
                        {
                            CountryId = 46,
                            CountryName = "DJ"
                        },
                        new
                        {
                            CountryId = 47,
                            CountryName = "DM"
                        },
                        new
                        {
                            CountryId = 48,
                            CountryName = "DO"
                        },
                        new
                        {
                            CountryId = 49,
                            CountryName = "EC"
                        },
                        new
                        {
                            CountryId = 50,
                            CountryName = "EG"
                        },
                        new
                        {
                            CountryId = 51,
                            CountryName = "SV"
                        },
                        new
                        {
                            CountryId = 52,
                            CountryName = "GQ"
                        },
                        new
                        {
                            CountryId = 53,
                            CountryName = "ER"
                        },
                        new
                        {
                            CountryId = 54,
                            CountryName = "EE"
                        },
                        new
                        {
                            CountryId = 55,
                            CountryName = "SZ"
                        },
                        new
                        {
                            CountryId = 56,
                            CountryName = "ET"
                        },
                        new
                        {
                            CountryId = 57,
                            CountryName = "FJ"
                        },
                        new
                        {
                            CountryId = 58,
                            CountryName = "FI"
                        },
                        new
                        {
                            CountryId = 59,
                            CountryName = "FR"
                        },
                        new
                        {
                            CountryId = 60,
                            CountryName = "GA"
                        },
                        new
                        {
                            CountryId = 61,
                            CountryName = "GM"
                        },
                        new
                        {
                            CountryId = 62,
                            CountryName = "GE"
                        },
                        new
                        {
                            CountryId = 63,
                            CountryName = "DE"
                        },
                        new
                        {
                            CountryId = 64,
                            CountryName = "GH"
                        },
                        new
                        {
                            CountryId = 65,
                            CountryName = "GR"
                        },
                        new
                        {
                            CountryId = 66,
                            CountryName = "GD"
                        },
                        new
                        {
                            CountryId = 67,
                            CountryName = "GT"
                        },
                        new
                        {
                            CountryId = 68,
                            CountryName = "GN"
                        },
                        new
                        {
                            CountryId = 69,
                            CountryName = "GW"
                        },
                        new
                        {
                            CountryId = 70,
                            CountryName = "GY"
                        },
                        new
                        {
                            CountryId = 71,
                            CountryName = "HT"
                        },
                        new
                        {
                            CountryId = 72,
                            CountryName = "HN"
                        },
                        new
                        {
                            CountryId = 73,
                            CountryName = "HU"
                        },
                        new
                        {
                            CountryId = 74,
                            CountryName = "IS"
                        },
                        new
                        {
                            CountryId = 75,
                            CountryName = "IN"
                        },
                        new
                        {
                            CountryId = 76,
                            CountryName = "ID"
                        },
                        new
                        {
                            CountryId = 77,
                            CountryName = "IR"
                        },
                        new
                        {
                            CountryId = 78,
                            CountryName = "IQ"
                        },
                        new
                        {
                            CountryId = 79,
                            CountryName = "IE"
                        },
                        new
                        {
                            CountryId = 80,
                            CountryName = "IL"
                        },
                        new
                        {
                            CountryId = 81,
                            CountryName = "IT"
                        },
                        new
                        {
                            CountryId = 82,
                            CountryName = "JM"
                        },
                        new
                        {
                            CountryId = 83,
                            CountryName = "JP"
                        },
                        new
                        {
                            CountryId = 84,
                            CountryName = "JO"
                        },
                        new
                        {
                            CountryId = 85,
                            CountryName = "KZ"
                        },
                        new
                        {
                            CountryId = 86,
                            CountryName = "KE"
                        },
                        new
                        {
                            CountryId = 87,
                            CountryName = "KI"
                        },
                        new
                        {
                            CountryId = 88,
                            CountryName = "KP"
                        },
                        new
                        {
                            CountryId = 89,
                            CountryName = "KR"
                        },
                        new
                        {
                            CountryId = 90,
                            CountryName = "KW"
                        },
                        new
                        {
                            CountryId = 91,
                            CountryName = "KG"
                        },
                        new
                        {
                            CountryId = 92,
                            CountryName = "LA"
                        },
                        new
                        {
                            CountryId = 93,
                            CountryName = "LV"
                        },
                        new
                        {
                            CountryId = 94,
                            CountryName = "LB"
                        },
                        new
                        {
                            CountryId = 95,
                            CountryName = "LS"
                        },
                        new
                        {
                            CountryId = 96,
                            CountryName = "LR"
                        },
                        new
                        {
                            CountryId = 97,
                            CountryName = "LY"
                        },
                        new
                        {
                            CountryId = 98,
                            CountryName = "LI"
                        },
                        new
                        {
                            CountryId = 99,
                            CountryName = "LT"
                        },
                        new
                        {
                            CountryId = 100,
                            CountryName = "LU"
                        },
                        new
                        {
                            CountryId = 101,
                            CountryName = "MG"
                        },
                        new
                        {
                            CountryId = 102,
                            CountryName = "MW"
                        },
                        new
                        {
                            CountryId = 103,
                            CountryName = "MY"
                        },
                        new
                        {
                            CountryId = 104,
                            CountryName = "MV"
                        },
                        new
                        {
                            CountryId = 105,
                            CountryName = "ML"
                        },
                        new
                        {
                            CountryId = 106,
                            CountryName = "MT"
                        },
                        new
                        {
                            CountryId = 107,
                            CountryName = "MH"
                        },
                        new
                        {
                            CountryId = 108,
                            CountryName = "MR"
                        },
                        new
                        {
                            CountryId = 109,
                            CountryName = "MU"
                        },
                        new
                        {
                            CountryId = 110,
                            CountryName = "MX"
                        },
                        new
                        {
                            CountryId = 111,
                            CountryName = "FM"
                        },
                        new
                        {
                            CountryId = 112,
                            CountryName = "MD"
                        },
                        new
                        {
                            CountryId = 113,
                            CountryName = "MC"
                        },
                        new
                        {
                            CountryId = 114,
                            CountryName = "MN"
                        },
                        new
                        {
                            CountryId = 115,
                            CountryName = "ME"
                        },
                        new
                        {
                            CountryId = 116,
                            CountryName = "MA"
                        },
                        new
                        {
                            CountryId = 117,
                            CountryName = "MZ"
                        },
                        new
                        {
                            CountryId = 118,
                            CountryName = "MM"
                        },
                        new
                        {
                            CountryId = 119,
                            CountryName = "NA"
                        },
                        new
                        {
                            CountryId = 120,
                            CountryName = "NR"
                        },
                        new
                        {
                            CountryId = 121,
                            CountryName = "NP"
                        },
                        new
                        {
                            CountryId = 122,
                            CountryName = "NL"
                        },
                        new
                        {
                            CountryId = 123,
                            CountryName = "NZ"
                        },
                        new
                        {
                            CountryId = 124,
                            CountryName = "NI"
                        },
                        new
                        {
                            CountryId = 125,
                            CountryName = "NE"
                        },
                        new
                        {
                            CountryId = 126,
                            CountryName = "NG"
                        },
                        new
                        {
                            CountryId = 127,
                            CountryName = "MK"
                        },
                        new
                        {
                            CountryId = 128,
                            CountryName = "NO"
                        },
                        new
                        {
                            CountryId = 129,
                            CountryName = "OM"
                        },
                        new
                        {
                            CountryId = 130,
                            CountryName = "PK"
                        },
                        new
                        {
                            CountryId = 131,
                            CountryName = "PW"
                        },
                        new
                        {
                            CountryId = 132,
                            CountryName = "PS"
                        },
                        new
                        {
                            CountryId = 133,
                            CountryName = "PA"
                        },
                        new
                        {
                            CountryId = 134,
                            CountryName = "PG"
                        },
                        new
                        {
                            CountryId = 135,
                            CountryName = "PY"
                        },
                        new
                        {
                            CountryId = 136,
                            CountryName = "PE"
                        },
                        new
                        {
                            CountryId = 137,
                            CountryName = "PH"
                        },
                        new
                        {
                            CountryId = 138,
                            CountryName = "PL"
                        },
                        new
                        {
                            CountryId = 139,
                            CountryName = "PT"
                        },
                        new
                        {
                            CountryId = 140,
                            CountryName = "QA"
                        },
                        new
                        {
                            CountryId = 141,
                            CountryName = "RO"
                        },
                        new
                        {
                            CountryId = 142,
                            CountryName = "RU"
                        },
                        new
                        {
                            CountryId = 143,
                            CountryName = "RW"
                        },
                        new
                        {
                            CountryId = 144,
                            CountryName = "KN"
                        },
                        new
                        {
                            CountryId = 145,
                            CountryName = "LC"
                        },
                        new
                        {
                            CountryId = 146,
                            CountryName = "VC"
                        },
                        new
                        {
                            CountryId = 147,
                            CountryName = "WS"
                        },
                        new
                        {
                            CountryId = 148,
                            CountryName = "SM"
                        },
                        new
                        {
                            CountryId = 149,
                            CountryName = "ST"
                        },
                        new
                        {
                            CountryId = 150,
                            CountryName = "SA"
                        },
                        new
                        {
                            CountryId = 151,
                            CountryName = "SN"
                        },
                        new
                        {
                            CountryId = 152,
                            CountryName = "RS"
                        },
                        new
                        {
                            CountryId = 153,
                            CountryName = "SC"
                        },
                        new
                        {
                            CountryId = 154,
                            CountryName = "SL"
                        },
                        new
                        {
                            CountryId = 155,
                            CountryName = "SG"
                        },
                        new
                        {
                            CountryId = 156,
                            CountryName = "SK"
                        },
                        new
                        {
                            CountryId = 157,
                            CountryName = "SI"
                        },
                        new
                        {
                            CountryId = 158,
                            CountryName = "SB"
                        },
                        new
                        {
                            CountryId = 159,
                            CountryName = "SO"
                        },
                        new
                        {
                            CountryId = 160,
                            CountryName = "ZA"
                        },
                        new
                        {
                            CountryId = 161,
                            CountryName = "SS"
                        },
                        new
                        {
                            CountryId = 162,
                            CountryName = "ES"
                        },
                        new
                        {
                            CountryId = 163,
                            CountryName = "LK"
                        },
                        new
                        {
                            CountryId = 164,
                            CountryName = "SD"
                        },
                        new
                        {
                            CountryId = 165,
                            CountryName = "SR"
                        },
                        new
                        {
                            CountryId = 166,
                            CountryName = "SE"
                        },
                        new
                        {
                            CountryId = 167,
                            CountryName = "CH"
                        },
                        new
                        {
                            CountryId = 168,
                            CountryName = "SY"
                        },
                        new
                        {
                            CountryId = 169,
                            CountryName = "TW"
                        },
                        new
                        {
                            CountryId = 170,
                            CountryName = "TJ"
                        },
                        new
                        {
                            CountryId = 171,
                            CountryName = "TZ"
                        },
                        new
                        {
                            CountryId = 172,
                            CountryName = "TH"
                        },
                        new
                        {
                            CountryId = 173,
                            CountryName = "TL"
                        },
                        new
                        {
                            CountryId = 174,
                            CountryName = "TG"
                        },
                        new
                        {
                            CountryId = 175,
                            CountryName = "TO"
                        },
                        new
                        {
                            CountryId = 176,
                            CountryName = "TT"
                        },
                        new
                        {
                            CountryId = 177,
                            CountryName = "TN"
                        },
                        new
                        {
                            CountryId = 178,
                            CountryName = "TR"
                        },
                        new
                        {
                            CountryId = 179,
                            CountryName = "TM"
                        },
                        new
                        {
                            CountryId = 180,
                            CountryName = "TV"
                        },
                        new
                        {
                            CountryId = 181,
                            CountryName = "UG"
                        },
                        new
                        {
                            CountryId = 182,
                            CountryName = "UA"
                        },
                        new
                        {
                            CountryId = 183,
                            CountryName = "AE"
                        },
                        new
                        {
                            CountryId = 184,
                            CountryName = "GB"
                        },
                        new
                        {
                            CountryId = 185,
                            CountryName = "US"
                        },
                        new
                        {
                            CountryId = 186,
                            CountryName = "UY"
                        },
                        new
                        {
                            CountryId = 187,
                            CountryName = "UZ"
                        },
                        new
                        {
                            CountryId = 188,
                            CountryName = "VU"
                        },
                        new
                        {
                            CountryId = 189,
                            CountryName = "VA"
                        },
                        new
                        {
                            CountryId = 190,
                            CountryName = "VE"
                        },
                        new
                        {
                            CountryId = 191,
                            CountryName = "VN"
                        },
                        new
                        {
                            CountryId = 192,
                            CountryName = "YE"
                        },
                        new
                        {
                            CountryId = 193,
                            CountryName = "ZM"
                        },
                        new
                        {
                            CountryId = 194,
                            CountryName = "ZW"
                        });
                });

            modelBuilder.Entity("MoodFlix.Model.CountryPlatform", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("CountryPlatform");
                });

            modelBuilder.Entity("MoodFlix.Model.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"));

                    b.Property<string>("DirectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorId");

                    b.ToTable("Director");
                });

            modelBuilder.Entity("MoodFlix.Model.DirectorMovie", b =>
                {
                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("DirectorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("DirectorMovie");
                });

            modelBuilder.Entity("MoodFlix.Model.Emotion", b =>
                {
                    b.Property<int>("EmotionId")
                        .HasColumnType("int");

                    b.Property<string>("EmotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmotionId");

                    b.ToTable("Emotion");

                    b.HasData(
                        new
                        {
                            EmotionId = 0,
                            EmotionName = "Boredom"
                        },
                        new
                        {
                            EmotionId = 1,
                            EmotionName = "Admiration"
                        },
                        new
                        {
                            EmotionId = 2,
                            EmotionName = "Adoration"
                        },
                        new
                        {
                            EmotionId = 3,
                            EmotionName = "Joy"
                        },
                        new
                        {
                            EmotionId = 4,
                            EmotionName = "Love"
                        },
                        new
                        {
                            EmotionId = 5,
                            EmotionName = "Craving"
                        },
                        new
                        {
                            EmotionId = 6,
                            EmotionName = "Anxiety"
                        },
                        new
                        {
                            EmotionId = 7,
                            EmotionName = "AestheticAppreciation"
                        },
                        new
                        {
                            EmotionId = 8,
                            EmotionName = "Amazement"
                        },
                        new
                        {
                            EmotionId = 9,
                            EmotionName = "Calmness"
                        },
                        new
                        {
                            EmotionId = 10,
                            EmotionName = "Confusion"
                        },
                        new
                        {
                            EmotionId = 11,
                            EmotionName = "Lust"
                        },
                        new
                        {
                            EmotionId = 12,
                            EmotionName = "Disgust"
                        },
                        new
                        {
                            EmotionId = 13,
                            EmotionName = "Fun"
                        },
                        new
                        {
                            EmotionId = 14,
                            EmotionName = "EmpathicPain"
                        },
                        new
                        {
                            EmotionId = 15,
                            EmotionName = "Anger"
                        },
                        new
                        {
                            EmotionId = 16,
                            EmotionName = "Envy"
                        },
                        new
                        {
                            EmotionId = 17,
                            EmotionName = "Ecstasy"
                        },
                        new
                        {
                            EmotionId = 18,
                            EmotionName = "Horror"
                        },
                        new
                        {
                            EmotionId = 19,
                            EmotionName = "Interest"
                        },
                        new
                        {
                            EmotionId = 20,
                            EmotionName = "Fear"
                        },
                        new
                        {
                            EmotionId = 21,
                            EmotionName = "Nostalgia"
                        },
                        new
                        {
                            EmotionId = 22,
                            EmotionName = "Satisfaction"
                        },
                        new
                        {
                            EmotionId = 23,
                            EmotionName = "Sympathy"
                        },
                        new
                        {
                            EmotionId = 24,
                            EmotionName = "Sadness"
                        },
                        new
                        {
                            EmotionId = 25,
                            EmotionName = "Triumph"
                        },
                        new
                        {
                            EmotionId = 26,
                            EmotionName = "Shame"
                        });
                });

            modelBuilder.Entity("MoodFlix.Model.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = 0,
                            GenreName = "Action"
                        },
                        new
                        {
                            GenreId = 1,
                            GenreName = "Adventure"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Animation"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Comedy"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Crime"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Documentary"
                        },
                        new
                        {
                            GenreId = 6,
                            GenreName = "Drama"
                        },
                        new
                        {
                            GenreId = 7,
                            GenreName = "Family"
                        },
                        new
                        {
                            GenreId = 8,
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            GenreId = 9,
                            GenreName = "History"
                        },
                        new
                        {
                            GenreId = 10,
                            GenreName = "Horror"
                        },
                        new
                        {
                            GenreId = 11,
                            GenreName = "Music"
                        },
                        new
                        {
                            GenreId = 12,
                            GenreName = "Mystery"
                        },
                        new
                        {
                            GenreId = 13,
                            GenreName = "News"
                        },
                        new
                        {
                            GenreId = 14,
                            GenreName = "Reality"
                        },
                        new
                        {
                            GenreId = 15,
                            GenreName = "Romance"
                        },
                        new
                        {
                            GenreId = 16,
                            GenreName = "ScienceFiction"
                        },
                        new
                        {
                            GenreId = 17,
                            GenreName = "TalkShow"
                        },
                        new
                        {
                            GenreId = 18,
                            GenreName = "Thriller"
                        },
                        new
                        {
                            GenreId = 19,
                            GenreName = "War"
                        },
                        new
                        {
                            GenreId = 20,
                            GenreName = "Western"
                        });
                });

            modelBuilder.Entity("MoodFlix.Model.GenreMovie", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("GenreMovie");
                });

            modelBuilder.Entity("MoodFlix.Model.HistoryEmotion", b =>
                {
                    b.Property<int>("HistoryEmotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryEmotionId"));

                    b.Property<int>("EmotionId")
                        .HasColumnType("int");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.HasKey("HistoryEmotionId");

                    b.HasIndex("EmotionId");

                    b.HasIndex("RegisterId");

                    b.ToTable("HistoryEmotion");
                });

            modelBuilder.Entity("MoodFlix.Model.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("HorizontalPosterw360")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorizontalPosterw480")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorizontalPosterw720")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MoodFlix.Model.Platform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformId"));

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformId");

                    b.ToTable("Platform");
                });

            modelBuilder.Entity("MoodFlix.Model.Register", b =>
                {
                    b.Property<int>("RegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegisterId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegisterId");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("MoodFlix.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CountryId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MoodFlix.Model.UserGenre", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPreferred")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("UserGenre");
                });

            modelBuilder.Entity("MoodFlix.Model.UserPlatform", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("UserPlatform");
                });

            modelBuilder.Entity("MoodFlix.Model.CountryPlatform", b =>
                {
                    b.HasOne("MoodFlix.Model.Country", "Country")
                        .WithMany("CountryPlatforms")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Platform", "Platform")
                        .WithMany("CountryPlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("MoodFlix.Model.DirectorMovie", b =>
                {
                    b.HasOne("MoodFlix.Model.Director", "Director")
                        .WithMany("DirectorMovies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Movie", "Movie")
                        .WithMany("DirectorMovie")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoodFlix.Model.GenreMovie", b =>
                {
                    b.HasOne("MoodFlix.Model.Genre", "Genre")
                        .WithMany("GenreMovies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Movie", "Movie")
                        .WithMany("GenreMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoodFlix.Model.HistoryEmotion", b =>
                {
                    b.HasOne("MoodFlix.Model.Emotion", "Emotion")
                        .WithMany("HistoryEmotions")
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.Register", "Register")
                        .WithMany("HistoryEmotions")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emotion");

                    b.Navigation("Register");
                });

            modelBuilder.Entity("MoodFlix.Model.Register", b =>
                {
                    b.HasOne("MoodFlix.Model.Movie", "Movie")
                        .WithMany("Registers")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.User", "User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodFlix.Model.User", b =>
                {
                    b.HasOne("MoodFlix.Model.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MoodFlix.Model.UserGenre", b =>
                {
                    b.HasOne("MoodFlix.Model.Genre", "Genre")
                        .WithMany("UserGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.User", "User")
                        .WithMany("UserGenres")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodFlix.Model.UserPlatform", b =>
                {
                    b.HasOne("MoodFlix.Model.Platform", "Platform")
                        .WithMany("UserPlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodFlix.Model.User", "User")
                        .WithMany("UserPlatforms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodFlix.Model.Country", b =>
                {
                    b.Navigation("CountryPlatforms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MoodFlix.Model.Director", b =>
                {
                    b.Navigation("DirectorMovies");
                });

            modelBuilder.Entity("MoodFlix.Model.Emotion", b =>
                {
                    b.Navigation("HistoryEmotions");
                });

            modelBuilder.Entity("MoodFlix.Model.Genre", b =>
                {
                    b.Navigation("GenreMovies");

                    b.Navigation("UserGenres");
                });

            modelBuilder.Entity("MoodFlix.Model.Movie", b =>
                {
                    b.Navigation("DirectorMovie");

                    b.Navigation("GenreMovies");

                    b.Navigation("Registers");
                });

            modelBuilder.Entity("MoodFlix.Model.Platform", b =>
                {
                    b.Navigation("CountryPlatforms");

                    b.Navigation("UserPlatforms");
                });

            modelBuilder.Entity("MoodFlix.Model.Register", b =>
                {
                    b.Navigation("HistoryEmotions");
                });

            modelBuilder.Entity("MoodFlix.Model.User", b =>
                {
                    b.Navigation("History");

                    b.Navigation("UserGenres");

                    b.Navigation("UserPlatforms");
                });
#pragma warning restore 612, 618
        }
    }
}
